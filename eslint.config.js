import js from '@eslint/js';
import tseslint from '@typescript-eslint/eslint-plugin';
import tsparser from '@typescript-eslint/parser';
import globals from 'globals';

export default [
  js.configs.recommended,
  {
    files: ['**/*.ts', '**/*.tsx'],
    languageOptions: {
      parser: tsparser,
      parserOptions: {
        project: './tsconfig.json',
      },
      globals: {
        ...globals.browser,
        ...globals.node,
        ...globals.webextensions,
        chrome: 'readonly',
        window: 'readonly',
        document: 'readonly',
        navigator: 'readonly',
        console: 'readonly',
        localStorage: 'readonly',
        sessionStorage: 'readonly',
        crypto: 'readonly',
        URL: 'readonly',
        Blob: 'readonly',
        FileReader: 'readonly',
        MutationObserver: 'readonly',
        ResizeObserver: 'readonly',
        IntersectionObserver: 'readonly',
        requestAnimationFrame: 'readonly',
        cancelAnimationFrame: 'readonly',
        setTimeout: 'readonly',
        clearTimeout: 'readonly',
        setInterval: 'readonly',
        clearInterval: 'readonly',
        queueMicrotask: 'readonly',
        performance: 'readonly',
        Element: 'readonly',
        HTMLElement: 'readonly',
        HTMLButtonElement: 'readonly',
        HTMLInputElement: 'readonly',
        HTMLTextAreaElement: 'readonly',
        HTMLSelectElement: 'readonly',
        Node: 'readonly',
        ShadowRoot: 'readonly',
        Event: 'readonly',
        FocusEvent: 'readonly',
        KeyboardEvent: 'readonly',
        NodeFilter: 'readonly',
        CSS: 'readonly',
        getComputedStyle: 'readonly',
        matchMedia: 'readonly',
        btoa: 'readonly',
        confirm: 'readonly',
        prompt: 'readonly',
        reportError: 'readonly',
        __REACT_DEVTOOLS_GLOBAL_HOOK__: 'readonly',
        MSApp: 'readonly',
        global: 'readonly',
        self: 'readonly',
        process: 'readonly',
      },
    },
    plugins: {
      '@typescript-eslint': tseslint,
    },
    rules: {
      ...tseslint.configs.recommended.rules,
      'no-unused-vars': 'warn',
      'no-empty': 'warn',
      'no-prototype-builtins': 'off',
      'no-constant-binary-expression': 'off',
      'no-constant-condition': 'off',
      'no-fallthrough': 'off',
      'no-case-declarations': 'off',
      'no-sparse-arrays': 'off',
      'no-cond-assign': 'off',
      'no-func-assign': 'off',
      'no-control-regex': 'off',
      'no-useless-escape': 'off',
      'valid-typeof': 'off',
      'getter-return': 'off',
      '@typescript-eslint/no-explicit-any': 'off',
      '@typescript-eslint/no-unused-vars': 'warn',
    },
    ignores: [
      'node_modules/**',
      '.pnp/**',
      '.pnp.js',
      'dist/**',
      'out/**',
      'build/**',
      'glancebrief.user.js',
    ],
  },
];
