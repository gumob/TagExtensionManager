(()=>{"use strict";class e{async getAllExtensions(){return new Promise((e=>{chrome.management.getAll((n=>{const t=n.map((e=>({id:e.id,name:e.name,description:e.description||"",enabled:e.enabled,iconUrl:e.icons?.[0]?.url||""})));e(t)}))}))}async toggleExtension(e,n){return new Promise(((t,s)=>{chrome.management.setEnabled(e,n,(()=>{chrome.runtime.lastError?s(chrome.runtime.lastError):t()}))}))}filterExtensions(e,n){const t=e.toLowerCase();return n.filter((e=>e.name.toLowerCase().includes(t)||e.description.toLowerCase().includes(t)))}}class n{constructor(){this.onToggleCallback=null,this.container=document.getElementById("extensionsList")}render(e){this.container.innerHTML="",e.forEach((e=>{const n=this.createExtensionElement(e);this.container.appendChild(n)}))}createExtensionElement(e){const n=document.createElement("div");n.className="extension-item";const t=document.createElement("img");t.className="extension-icon",t.src=e.iconUrl,t.alt=e.name;const s=document.createElement("div");s.className="extension-info";const i=document.createElement("h3");i.className="extension-name",i.textContent=e.name;const o=document.createElement("p");o.className="extension-description",o.textContent=e.description;const a=document.createElement("input");return a.type="checkbox",a.className="extension-toggle",a.checked=e.enabled,a.addEventListener("change",(()=>{this.onToggleCallback&&this.onToggleCallback(e.id,a.checked)})),s.appendChild(i),s.appendChild(o),n.appendChild(t),n.appendChild(s),n.appendChild(a),n}onToggleExtension(e){this.onToggleCallback=e}}class t{constructor(){this.onSearchCallback=null,this.input=document.getElementById("search"),this.setupEventListeners()}setupEventListeners(){this.input.addEventListener("input",(()=>{this.onSearchCallback&&this.onSearchCallback(this.input.value)}))}onSearch(e){this.onSearchCallback=e}}class s{constructor(){this.extensions=[],this.extensionManager=new e,this.extensionList=new n,this.searchBar=new t,this.initialize()}async initialize(){this.extensions=await this.extensionManager.getAllExtensions(),this.extensionList.render(this.extensions),this.setupEventListeners()}setupEventListeners(){this.searchBar.onSearch((e=>{const n=this.extensionManager.filterExtensions(e,this.extensions);this.extensionList.render(n)})),this.extensionList.onToggleExtension((async(e,n)=>{await this.extensionManager.toggleExtension(e,n),this.extensions=await this.extensionManager.getAllExtensions(),this.extensionList.render(this.extensions)}))}}document.addEventListener("DOMContentLoaded",(()=>{new s}))})();